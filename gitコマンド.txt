git 

git 
git --version

【ユーザー登録】
git config --global user.name "aaa"
git config --global user,email "aaa"
git config --list

ディレクトリに移動
【リポジトリの作成】
git init

git status

ファイル作成

git status
git status -s

【ステージングに追加】
git add ファイル名
or
git add .

【コミット】
git commit 
vimが開くのでコメントを書いてesc, :wq, enter
or

git commit -a -m "こめんと"  
#addとcommitを同時に行うコマンド
# -a は仮登録とコミットを同時に行うオプション
# -m は一行だけコミットメッセージを登録できるオプション

git log
git log --oneline
git log -1

git diff #ステージングとワーキングディレクトリの差分を表示
git diff -cached #最新のコミットとステージングの差分を表示
git diff HEAD #最新コミットのスナップショットとワーキングディレクトリの差分

【取り消し等】
git checkout -- ○○ #ワーキングディレクトリを前の状態にリセット
git reset ○○ #ステージングを前の状態にリセット
git reset HEAD ○○　#ステージングを前の状態にリセット 
git reset --mixed HEAD  #ステージングを前の状態にリセット 

git revert HEAD #最新コミットを取り消し、前のコミットにする
git reset --soft HEAD #最新コミットを取り消す
git commit --amend #最新コミットを取り消し、新しいコミットを行う

【ブランチ作成】
git branch #ブランチの状態を確認
git branch ○○ #ブランチの作成
git checkout ○○ #ブランチの切り替え

git checkout -b ブランチ名 #新しいブランチ作成＆切り替え


【リモートレポジトリの作成】
ssh-keygen -t rsa #公開鍵の作成
clip < ~/.ssh/id_rsa.pub #鍵をクリップボードへコピー
ssh -T git@github.com #接続確認

git remote -v #リモートレポジトリの確認　ファイルパスの確認
git remote add origin git@github.com:kikuchi-morimichi/hello-github_mk.git
git push origin master #リモートへプッシュ

【ブランチのマージ】
ブランチを切り替える
git merge マージしたいブランチ名 #ブランチをマージする
コンフリクトの場合は解消してからコミットする

【ブランチの削除】
git branch -d 削除したいブランチ名

【リポジトリのクローン】
git clone パス

【変更の反映】
git pull パス
